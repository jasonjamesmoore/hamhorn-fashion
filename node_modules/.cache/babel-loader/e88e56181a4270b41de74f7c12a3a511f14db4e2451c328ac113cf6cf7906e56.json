{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBcokgVjW3_EmS5EPmw4Xds1qYZT1PUFbQ\",\n  authDomain: \"hamhorn-fashion.firebaseapp.com\",\n  projectId: \"hamhorn-fashion\",\n  storageBucket: \"hamhorn-fashion.appspot.com\",\n  messagingSenderId: \"566524172585\",\n  appId: \"1:566524172585:web:f92a5055b8097183c7ff38\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n  return userDocRef;\n};\n// if user data exists\n// return userDocRef\n\n// if user data does not exist\n// create/set document with the data from the userAuth in my collection","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error","message"],"sources":["/Users/jasonmoore/Documents/Coding/2024-Projects/ZTM React Capstone/hamhorn-fashion/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { \n    getAuth, \n    signInWithRedirect, \n    signInWithPopup, \n    GoogleAuthProvider,\n} from 'firebase/auth';\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc,\n} from 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBcokgVjW3_EmS5EPmw4Xds1qYZT1PUFbQ\",\n    authDomain: \"hamhorn-fashion.firebaseapp.com\",\n    projectId: \"hamhorn-fashion\",\n    storageBucket: \"hamhorn-fashion.appspot.com\",\n    messagingSenderId: \"566524172585\",\n    appId: \"1:566524172585:web:f92a5055b8097183c7ff38\"\n  };\n  \n  const firebaseApp = initializeApp(firebaseConfig);\n\n  const provider = new GoogleAuthProvider();\n  provider.setCustomParameters({\n    prompt: \"select_account\"\n  });\n\n  export const auth = getAuth();\n  export const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\n  export const db = getFirestore();\n\n  export const createUserDocumentFromAuth = async (userAuth) => {\n    const userDocRef = doc(db, 'users', userAuth.uid);\n\n    console.log(userDocRef);\n    \n    const userSnapshot = await getDoc(userDocRef);\n    console.log(userSnapshot);\n    console.log(userSnapshot.exists());\n  \n\n  if(!userSnapshot.exists()) {\n    const{displayName, email} = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email, \n        createdAt,\n      });\n    } catch(error){\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userDocRef;\n}\n  // if user data exists\n  // return userDocRef\n\n\n    // if user data does not exist\n    // create/set document with the data from the userAuth in my collection"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACIC,OAAO,EACPC,kBAAkB,EAClBC,eAAe,EACfC,kBAAkB,QACf,eAAe;AACtB,SACEC,YAAY,EACZC,GAAG,EACHC,MAAM,EACNC,MAAM,QACD,oBAAoB;AAE3B,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,iCAAiC;EAC7CC,SAAS,EAAE,iBAAiB;EAC5BC,aAAa,EAAE,6BAA6B;EAC5CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGhB,aAAa,CAACS,cAAc,CAAC;AAEjD,MAAMQ,QAAQ,GAAG,IAAIb,kBAAkB,CAAC,CAAC;AACzCa,QAAQ,CAACC,mBAAmB,CAAC;EAC3BC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAGnB,OAAO,CAAC,CAAC;AAC7B,OAAO,MAAMoB,qBAAqB,GAAGA,CAAA,KAAMlB,eAAe,CAACiB,IAAI,EAAEH,QAAQ,CAAC;AAE1E,OAAO,MAAMK,EAAE,GAAGjB,YAAY,CAAC,CAAC;AAEhC,OAAO,MAAMkB,0BAA0B,GAAG,MAAOC,QAAQ,IAAK;EAC5D,MAAMC,UAAU,GAAGnB,GAAG,CAACgB,EAAE,EAAE,OAAO,EAAEE,QAAQ,CAACE,GAAG,CAAC;EAEjDC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EAEvB,MAAMI,YAAY,GAAG,MAAMtB,MAAM,CAACkB,UAAU,CAAC;EAC7CE,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;EACzBF,OAAO,CAACC,GAAG,CAACC,YAAY,CAACC,MAAM,CAAC,CAAC,CAAC;EAGpC,IAAG,CAACD,YAAY,CAACC,MAAM,CAAC,CAAC,EAAE;IACzB,MAAK;MAACC,WAAW;MAAEC;IAAK,CAAC,GAAGR,QAAQ;IACpC,MAAMS,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAE5B,IAAI;MACF,MAAM1B,MAAM,CAACiB,UAAU,EAAE;QACvBM,WAAW;QACXC,KAAK;QACLC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAME,KAAK,EAAC;MACZR,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEO,KAAK,CAACC,OAAO,CAAC;IACnD;EACF;EAEA,OAAOX,UAAU;AACnB,CAAC;AACC;AACA;;AAGE;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}